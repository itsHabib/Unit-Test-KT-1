// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/itsHabib/go-kt-1/cats (interfaces: HttpDo)

// Package mock_cats is a generated GoMock package.
package mock_cats

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHttpDo is a mock of HttpDo interface.
type MockHttpDo struct {
	ctrl     *gomock.Controller
	recorder *MockHttpDoMockRecorder
}

// MockHttpDoMockRecorder is the mock recorder for MockHttpDo.
type MockHttpDoMockRecorder struct {
	mock *MockHttpDo
}

// NewMockHttpDo creates a new mock instance.
func NewMockHttpDo(ctrl *gomock.Controller) *MockHttpDo {
	mock := &MockHttpDo{ctrl: ctrl}
	mock.recorder = &MockHttpDoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpDo) EXPECT() *MockHttpDoMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockHttpDo) Do(arg0 *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockHttpDoMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockHttpDo)(nil).Do), arg0)
}
